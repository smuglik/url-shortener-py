[project]
name = "url-shortener-py"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "alembic>=1.16.1",
    "fastapi[standard]>=0.115.12",
    "granian>=2.3.1",
    "greenlet>=3.2.2",
    "psycopg[binary]>=3.2.9",
    "pydantic-settings>=2.9.1",
    "sqlalchemy>=2.0.41",
    "uvicorn>=0.34.2",
    "uvloop>=0.21.0",
]

[dependency-groups]
dev = [
    "ruff>=0.11.10",
]

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py313"
fix = true
src = [
    "src/",
    "tests/"
]
lint.select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "PTH", # forcebly use Pathlib
    "ANN", # check type hints
    "ERA",
    "PL",
    "RUF",
    "PERF",
    "TCH",
    "TID",
    "SIM",
    "PT",
    "PIE",
    "DTZ",
    "A",
    "BLE",
    "S",
    "ASYNC",
    "D",
    "N",
    "F",
    "T20"
]
lint.ignore = [
    "B008", # do not perform function calls in argument defaults
    "W191", # indentation contains tabs
    "D100", # Docstring in module
    "D104",
    "D415",
    "D400",
    "S101",
    "S501", # Probable use of `httpx` call with `verify=False` disabling SSL certificate checks
    "D203",
    "D213",
    "A005"
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
skip-magic-trailing-comma = false

[tool.ruff.lint.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]
lines-after-imports = 2

[tool.ruff.lint.extend-per-file-ignores]
"tests/conftest.py" = ["D103"]
"tests/factories.py" = ["D101"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["pydantic.field_validator", "classmethod"]

[tool.ruff.lint.flake8-type-checking]
runtime-evaluated-base-classes = ["pydantic.BaseModel"]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true
